<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
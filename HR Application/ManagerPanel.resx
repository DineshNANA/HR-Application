<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        g2r4vcFs/w+NfuhYHm7rBQAAAABJRU5ErkJggg==
</value>
  </data>
</root>